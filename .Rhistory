library(BiDAG)
library(igraph)
df <- read.csv("C:/Users/Jerzy/Documents/GitHub/sparsebndata/data/alarm.csv", header = TRUE, sep = ",", check.names = FALSE)
df <- as.data.frame(unclass(df), stringsAsFactors = TRUE)
# bde for binary data, bdecat for categorical data, bge for continuous data and usr for a user-defined score
scorep <- scoreparameters(scoretype = c("bdecat"), data = df)
x <- orderMCMC(scorep)
n <- getDAG(x, amat = TRUE, cp = FALSE)
g <- graph.adjacency(n)
el <- get.edgelist(g)
View(el)
experiment_range <- list(20,
40,
60,
80,
100,
120,
140,
160,
180,
200,
220,
240,
260,
280,
300,
320,
340,
360,
380,
400,
440)
library(BiDAG)
library(igraph)
df <- read.csv("C:/Users/Jerzy/Documents/GitHub/sparsebndata/data/pigs.csv", header = TRUE, sep = ",", check.names = FALSE)
#df <- as.data.frame(unclass(df), stringsAsFactors = TRUE)
# bde for binary data, bdecat for categorical data, bge for continuous data and usr for a user-defined score
experiment_range <- list(20,
40,
60,
80,
100,
120,
140,
160,
180,
200,
220,
240,
260,
280,
300,
320,
340,
360,
380,
400,
440)
timelist <- list()
for (i in experiment_range) {
rand_df <- df[sample(nrow(df), size=i), ]
start_time <- Sys.time()
scorep <- scoreparameters(scoretype = c("bdecat"), data = rand_df)
x <- orderMCMC(scorep)
end_time <- Sys.time()
ctime <- end_time - start_time
otime <- list(ctime)
timelist <- append(timelist, otime)
}
library(sparsebn)
library(igraph)
library(graph)
df <- read.csv("C:\\Users\\Jerzy\\Documents\\GitHub\\sparsebndata\\data\\arth150.csv", header = TRUE, sep = ",", check.names = FALSE)
df <- as.data.frame(unclass(df), stringsAsFactors = TRUE)
experiment_range <- list(10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 106)
timelist <- list()
for (i in experiment_range) {
rand_df <- df[sample(ncol(df), size=i), ]
start_time <- Sys.time()
dat <- sparsebnData(rand_df, type = 'c')
dags <- estimate.dag(data = dat)
end_time <- Sys.time()
ctime <- end_time - start_time
otime <- list(ctime)
timelist <- append(timelist, otime)
}
library(sparsebn)
library(igraph)
library(graph)
df <- read.csv("C:\\Users\\Jerzy\\Documents\\GitHub\\sparsebndata\\data\\arth150.csv", header = TRUE, sep = ",", check.names = FALSE)
df <- as.data.frame(unclass(df), stringsAsFactors = TRUE)
experiment_range <- list(10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 106)
timelist <- list()
for (i in experiment_range) {
rand_df <- df[sample(ncol(df), size=i), ]
start_time <- Sys.time()
dat <- sparsebnData(rand_df, type = 'c')
dags <- estimate.dag(data = dat)
end_time <- Sys.time()
ctime <- end_time - start_time
otime <- list(ctime)
timelist <- append(timelist, otime)
}
timelist
library(BiDAG)
library(igraph)
df <- read.csv("C:/Users/Jerzy/Documents/GitHub/sparsebndata/data/pigs.csv", header = TRUE, sep = ",", check.names = FALSE)
#df <- as.data.frame(unclass(df), stringsAsFactors = TRUE)
# bde for binary data, bdecat for categorical data, bge for continuous data and usr for a user-defined score
experiment_range <- list(20,
40,
60,
80,
100,
120,
140,
160,
180,
200,
220,
240,
260,
280,
300,
320,
340,
360,
380,
400,
440)
timelist <- list()
for (i in experiment_range) {
rand_df <- df[sample(ncol(df), size=i), ]
start_time <- Sys.time()
scorep <- scoreparameters(scoretype = c("bdecat"), data = rand_df)
x <- orderMCMC(scorep)
end_time <- Sys.time()
ctime <- end_time - start_time
otime <- list(ctime)
timelist <- append(timelist, otime)
}
library(sparsebn)
library(igraph)
library(graph)
df <- read.csv("C:\\Users\\Jerzy\\Documents\\GitHub\\sparsebndata\\data\\arth150.csv", header = TRUE, sep = ",", check.names = FALSE)
df <- as.data.frame(unclass(df), stringsAsFactors = TRUE)
experiment_range <- list(10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 106)
timelist <- list()
for (i in experiment_range) {
rand_df <- df[sample(ncol(df), size=i), ]
start_time <- Sys.time()
dat <- sparsebnData(rand_df, type = 'c')
dags <- estimate.dag(data = dat)
end_time <- Sys.time()
ctime <- end_time - start_time
otime <- list(ctime)
timelist <- append(timelist, otime)
}
library(BiDAG)
library(igraph)
df <- read.csv("C:/Users/Jerzy/Documents/GitHub/sparsebndata/data/pigs.csv", header = TRUE, sep = ",", check.names = FALSE)
#df <- as.data.frame(unclass(df), stringsAsFactors = TRUE)
# bde for binary data, bdecat for categorical data, bge for continuous data and usr for a user-defined score
experiment_range <- list(20,
40,
60,
80,
100,
120,
140,
160,
180,
200,
220,
240,
260,
280,
300,
320,
340,
360,
380,
400,
440)
timelist <- list()
for (i in experiment_range) {
rand_df <- df[,sample(1:ncol(df),i)]
start_time <- Sys.time()
scorep <- scoreparameters(scoretype = c("bdecat"), data = rand_df)
x <- orderMCMC(scorep)
end_time <- Sys.time()
ctime <- end_time - start_time
otime <- list(ctime)
timelist <- append(timelist, otime)
}
library(sparsebn)
library(igraph)
library(graph)
df <- read.csv("data/arth150.csv", header = TRUE, sep = ",", check.names = FALSE)
df <- as.data.frame(unclass(df), stringsAsFactors = TRUE)
experiment_range <- list(10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 106)
timelist <- list()
for (i in experiment_range) {
rand_df <- df[,sample(1:ncol(df),i)]
start_time <- Sys.time()
dat <- sparsebnData(rand_df, type = 'c')
dags <- estimate.dag(data = dat)
end_time <- Sys.time()
ctime <- end_time - start_time
otime <- list(ctime)
timelist <- append(timelist, otime)
}
timelist
library(BiDAG)
library(igraph)
df <- read.csv("C:/Users/Jerzy/Documents/GitHub/sparsebndata/data/pigs.csv", header = TRUE, sep = ",", check.names = FALSE)
#df <- as.data.frame(unclass(df), stringsAsFactors = TRUE)
# bde for binary data, bdecat for categorical data, bge for continuous data and usr for a user-defined score
experiment_range <- list(20,
40,
60,
80,
100,
120,
140,
160,
180,
200,
220,
240,
260,
280,
300,
320,
340,
360,
380,
400,
440)
timelist <- list()
for (i in experiment_range) {
rand_df <- df[,sample(1:ncol(df),i)]
start_time <- Sys.time()
scorep <- scoreparameters(scoretype = c("bdecat"), data = rand_df)
x <- orderMCMC(scorep)
end_time <- Sys.time()
ctime <- end_time - start_time
otime <- list(ctime)
timelist <- append(timelist, otime)
}
timelist
